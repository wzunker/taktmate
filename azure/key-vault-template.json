{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "description": "Creates an Azure Key Vault for TaktMate with secure API key management, access policies, and App Service integration"
  },
  "parameters": {
    "keyVaultName": {
      "type": "string",
      "defaultValue": "taktmate-kv",
      "metadata": {
        "description": "Name of the Key Vault"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "environment": {
      "type": "string",
      "defaultValue": "Production",
      "allowedValues": [
        "Development",
        "Staging",
        "Production"
      ],
      "metadata": {
        "description": "Environment type"
      }
    },
    "skuName": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "SKU for the Key Vault"
      }
    },
    "tenantId": {
      "type": "string",
      "defaultValue": "[subscription().tenantId]",
      "metadata": {
        "description": "Azure AD tenant ID"
      }
    },
    "appServicePrincipalId": {
      "type": "string",
      "metadata": {
        "description": "Principal ID of the App Service managed identity"
      }
    },
    "administratorObjectId": {
      "type": "string",
      "metadata": {
        "description": "Object ID of the administrator (user or service principal)"
      }
    },
    "enabledForDeployment": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable Key Vault for Azure deployment"
      }
    },
    "enabledForDiskEncryption": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable Key Vault for disk encryption"
      }
    },
    "enabledForTemplateDeployment": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable Key Vault for ARM template deployment"
      }
    },
    "enableSoftDelete": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable soft delete for the Key Vault"
      }
    },
    "enablePurgeProtection": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable purge protection for the Key Vault"
      }
    },
    "softDeleteRetentionInDays": {
      "type": "int",
      "defaultValue": 90,
      "minValue": 7,
      "maxValue": 90,
      "metadata": {
        "description": "Soft delete retention period in days"
      }
    },
    "networkAcls": {
      "type": "object",
      "defaultValue": {
        "defaultAction": "Allow",
        "bypass": "AzureServices"
      },
      "metadata": {
        "description": "Network access control list for the Key Vault"
      }
    }
  },
  "variables": {
    "tags": {
      "Environment": "[parameters('environment')]",
      "Application": "TaktMate",
      "Component": "Key-Vault",
      "ManagedBy": "ARM Template"
    },
    "keyVaultUri": "[concat('https://', parameters('keyVaultName'), '.vault.azure.net/')]"
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2022-07-01",
      "name": "[parameters('keyVaultName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "tenantId": "[parameters('tenantId')]",
        "sku": {
          "family": "A",
          "name": "[parameters('skuName')]"
        },
        "enabledForDeployment": "[parameters('enabledForDeployment')]",
        "enabledForDiskEncryption": "[parameters('enabledForDiskEncryption')]",
        "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]",
        "enableSoftDelete": "[parameters('enableSoftDelete')]",
        "enablePurgeProtection": "[parameters('enablePurgeProtection')]",
        "softDeleteRetentionInDays": "[parameters('softDeleteRetentionInDays')]",
        "enableRbacAuthorization": false,
        "accessPolicies": [
          {
            "tenantId": "[parameters('tenantId')]",
            "objectId": "[parameters('administratorObjectId')]",
            "permissions": {
              "keys": [
                "get",
                "list",
                "update",
                "create",
                "import",
                "delete",
                "recover",
                "backup",
                "restore",
                "decrypt",
                "encrypt",
                "unwrapKey",
                "wrapKey",
                "verify",
                "sign"
              ],
              "secrets": [
                "get",
                "list",
                "set",
                "delete",
                "recover",
                "backup",
                "restore"
              ],
              "certificates": [
                "get",
                "list",
                "update",
                "create",
                "import",
                "delete",
                "recover",
                "backup",
                "restore",
                "managecontacts",
                "manageissuers",
                "getissuers",
                "listissuers",
                "setissuers",
                "deleteissuers"
              ]
            }
          },
          {
            "tenantId": "[parameters('tenantId')]",
            "objectId": "[parameters('appServicePrincipalId')]",
            "permissions": {
              "keys": [],
              "secrets": [
                "get",
                "list"
              ],
              "certificates": [
                "get",
                "list"
              ]
            }
          }
        ],
        "networkAcls": "[parameters('networkAcls')]",
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2022-07-01",
      "name": "[concat(parameters('keyVaultName'), '/OpenAI-API-Key')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "placeholder-openai-key-replace-after-deployment",
        "contentType": "text/plain",
        "attributes": {
          "enabled": true
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2022-07-01",
      "name": "[concat(parameters('keyVaultName'), '/OpenAI-API-Endpoint')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "placeholder-openai-endpoint-replace-after-deployment",
        "contentType": "text/plain",
        "attributes": {
          "enabled": true
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2022-07-01",
      "name": "[concat(parameters('keyVaultName'), '/Azure-AD-B2C-Client-ID')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "placeholder-b2c-client-id-replace-after-deployment",
        "contentType": "text/plain",
        "attributes": {
          "enabled": true
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2022-07-01",
      "name": "[concat(parameters('keyVaultName'), '/Azure-AD-B2C-Client-Secret')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "placeholder-b2c-client-secret-replace-after-deployment",
        "contentType": "text/plain",
        "attributes": {
          "enabled": true
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2022-07-01",
      "name": "[concat(parameters('keyVaultName'), '/Azure-AD-B2C-Tenant-Name')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "placeholder-b2c-tenant-name-replace-after-deployment",
        "contentType": "text/plain",
        "attributes": {
          "enabled": true
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2022-07-01",
      "name": "[concat(parameters('keyVaultName'), '/Azure-AD-B2C-Policy-Name')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "B2C_1_signupsignin",
        "contentType": "text/plain",
        "attributes": {
          "enabled": true
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2022-07-01",
      "name": "[concat(parameters('keyVaultName'), '/Database-Connection-String')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "placeholder-database-connection-replace-after-deployment",
        "contentType": "text/plain",
        "attributes": {
          "enabled": true
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2022-07-01",
      "name": "[concat(parameters('keyVaultName'), '/JWT-Secret')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "[base64(guid())]",
        "contentType": "text/plain",
        "attributes": {
          "enabled": true
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2022-07-01",
      "name": "[concat(parameters('keyVaultName'), '/Session-Secret')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "[base64(guid())]",
        "contentType": "text/plain",
        "attributes": {
          "enabled": true
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2022-07-01",
      "name": "[concat(parameters('keyVaultName'), '/Encryption-Key')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "[base64(guid())]",
        "contentType": "text/plain",
        "attributes": {
          "enabled": true
        }
      }
    }
  ],
  "outputs": {
    "keyVaultName": {
      "type": "string",
      "value": "[parameters('keyVaultName')]"
    },
    "keyVaultUri": {
      "type": "string",
      "value": "[variables('keyVaultUri')]"
    },
    "keyVaultResourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
    },
    "secretUris": {
      "type": "object",
      "value": {
        "openaiApiKey": "[concat(variables('keyVaultUri'), 'secrets/OpenAI-API-Key')]",
        "openaiApiEndpoint": "[concat(variables('keyVaultUri'), 'secrets/OpenAI-API-Endpoint')]",
        "azureAdB2cClientId": "[concat(variables('keyVaultUri'), 'secrets/Azure-AD-B2C-Client-ID')]",
        "azureAdB2cClientSecret": "[concat(variables('keyVaultUri'), 'secrets/Azure-AD-B2C-Client-Secret')]",
        "azureAdB2cTenantName": "[concat(variables('keyVaultUri'), 'secrets/Azure-AD-B2C-Tenant-Name')]",
        "azureAdB2cPolicyName": "[concat(variables('keyVaultUri'), 'secrets/Azure-AD-B2C-Policy-Name')]",
        "databaseConnectionString": "[concat(variables('keyVaultUri'), 'secrets/Database-Connection-String')]",
        "jwtSecret": "[concat(variables('keyVaultUri'), 'secrets/JWT-Secret')]",
        "sessionSecret": "[concat(variables('keyVaultUri'), 'secrets/Session-Secret')]",
        "encryptionKey": "[concat(variables('keyVaultUri'), 'secrets/Encryption-Key')]"
      }
    }
  }
}
