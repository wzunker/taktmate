name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'frontend/**'
      - '.github/workflows/azure-static-web-apps.yml'
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main
    paths:
      - 'frontend/**'

env:
  NODE_VERSION: '18.x'
  
jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
          
      - name: Install dependencies
        run: |
          cd frontend
          npm ci
          
      - name: Run tests
        run: |
          cd frontend
          npm test -- --coverage --watchAll=false
          
      - name: Run build
        env:
          CI: false  # Treat warnings as warnings, not errors
          GENERATE_SOURCEMAP: false  # Reduce build size
          REACT_APP_AZURE_AD_B2C_CLIENT_ID: ${{ secrets.REACT_APP_AZURE_AD_B2C_CLIENT_ID }}
          REACT_APP_AZURE_AD_B2C_AUTHORITY: ${{ secrets.REACT_APP_AZURE_AD_B2C_AUTHORITY }}
          REACT_APP_AZURE_AD_B2C_KNOWN_AUTHORITY: ${{ secrets.REACT_APP_AZURE_AD_B2C_KNOWN_AUTHORITY }}
          REACT_APP_AZURE_AD_B2C_TENANT_NAME: ${{ secrets.REACT_APP_AZURE_AD_B2C_TENANT_NAME }}
          REACT_APP_AZURE_AD_B2C_SCOPE: ${{ secrets.REACT_APP_AZURE_AD_B2C_SCOPE }}
          REACT_APP_AZURE_AD_B2C_SIGNUP_SIGNIN_POLICY: ${{ secrets.REACT_APP_AZURE_AD_B2C_SIGNUP_SIGNIN_POLICY }}
          REACT_APP_AZURE_AD_B2C_EDIT_PROFILE_POLICY: ${{ secrets.REACT_APP_AZURE_AD_B2C_EDIT_PROFILE_POLICY }}
          REACT_APP_AZURE_AD_B2C_RESET_PASSWORD_POLICY: ${{ secrets.REACT_APP_AZURE_AD_B2C_RESET_PASSWORD_POLICY }}
          REACT_APP_API_BASE_URL: ${{ secrets.REACT_APP_API_BASE_URL }}
          REACT_APP_REDIRECT_URI: ${{ secrets.REACT_APP_REDIRECT_URI }}
          REACT_APP_POST_LOGOUT_REDIRECT_URI: ${{ secrets.REACT_APP_POST_LOGOUT_REDIRECT_URI }}
        run: |
          cd frontend
          npm run build
          
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: "/frontend" # App source code path
          api_location: "" # Api source code path - optional
          output_location: "build" # Built app content directory - optional
          ###### End of Repository/Build Configurations ######
          
      - name: Upload build artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            frontend/build/
            frontend/npm-debug.log*
            frontend/yarn-debug.log*
            frontend/yarn-error.log*
          retention-days: 5

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          action: "close"

  # Security and code quality checks
  security_scan:
    runs-on: ubuntu-latest
    name: Security Scan
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    steps:
      - uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Install dependencies
        run: |
          cd frontend
          npm ci
          
      - name: Run security audit
        run: |
          cd frontend
          npm audit --audit-level=high
          
      - name: Check for vulnerabilities
        run: |
          cd frontend
          npx audit-ci --high
        continue-on-error: true

  # Performance budget check (optional)
  performance_check:
    runs-on: ubuntu-latest
    name: Performance Check
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build_and_deploy_job
    steps:
      - uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli@0.12.x
        
      - name: Run Lighthouse CI
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        run: |
          lhci autorun --upload.target=temporary-public-storage
        continue-on-error: true
